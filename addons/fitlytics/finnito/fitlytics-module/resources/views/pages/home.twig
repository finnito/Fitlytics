{% extends "finnito.theme.fitlytics::layouts.default" %}

{% block content %}
    <div class="navigation flex-apart">
        <h2 class="heading ~urge !low">{{ week_of|date_modify('monday this week')|date("D jS")}} - {{ week_of|date_modify('sunday this week')|date("D jS \\o\\f F Y") }}</h2>

        <div class="navigation-controls">
            <a class="button ~info !normal" href="/?week-of={{ week_of|date_modify('-1 week')|date('Y-m-d', 'Pacific/Auckland') }}">Week ⬅</a>
            <a class="button ~urge !normal" href="/?week-of={{ 'now'|date('Y-m-d', 'Pacific/Auckland') }}">Today</a>
            <a class="button ~info !normal" href="/?week-of={{ week_of|date_modify('+1 week')|date('Y-m-d', 'Pacific/Auckland') }}">➡ Week</a>
            
            <div class="select ~urge !low">
                <select name="week-selector" id="week-selector" autocomplete="off">
                {% for item in weeks %}
                    <option value="{{ item|date("Y-m-d", "Pacific/Auckland") }}" {% if week_of|date_modify('monday this week')|date("Y-m-d") == item|date("Y-m-d", "Pacific/Auckland") %} selected {% endif %}>Week of {{ item|date("D jS M, Y", "Pacific/Auckland") }}</option>
                {% endfor %}
                </select>
            </div>
            <script>
            document.querySelector("select#week-selector").addEventListener("change", function(event) {
                window.location.href = ("/?week-of=" + event.target.selectedOptions[0].value);
            });
            </script>
        </div>
    </div>
    <div class="flex-apart">
        <table class="table last-row-emphasised card">
            <thead>
                <tr>
                    <th>Sport</th>
                    <th>Distance</th>
                    <th>Elevation</th>
                    <th>Moving Time</th>
                </tr>
            </thead>
            <tbody>
                {% for stat in currentWeekStatisticsByType %}
                <tr>
                    <td>{{ stat.type }}</td>
                    <td>{{ stat.metersToKilometers(stat.distance, 2) }}km</td>
                    <td>{{ stat.metersToKilometers(stat.elevation, 2) }}km</td>
                    <td>{{ stat.secondsToHours(stat.moving_time) }}</td>
                </tr>
                {% endfor %}
                <tr>
                    <td></td>
                    <td>{{ currentWeekStatisticsByType[0].metersToKilometers(currentWeekStatistics.distance, 2) }}km</td>
                    <td>{{ currentWeekStatisticsByType[0].metersToKilometers(currentWeekStatistics.elevation, 2) }}km</td>
                    <td>{{ currentWeekStatisticsByType[0].secondsToHours(currentWeekStatistics.moving_time, 2) }}</td>
                </tr>
            </tbody>
        </table>
        <div class="chartContainer card">
            <canvas id="currentWeekChart"></canvas>
            <script>
            document.addEventListener("DOMContentLoaded", function() {
                var currentWeekChartEl = document.getElementById('currentWeekChart').getContext('2d');
                var currentWeekChart = new Chart(currentWeekChartEl, { 
                    type: 'bar',
                    responsive: true,
                    maintainAspectRatio: true,
                    aspectRatio: 1,
                    options: {
                        interaction: {
                            
                        },
                        plugins: {
                            legend: {
                                position: 'bottom',
                            },
                            title: {
                                display: true,
                                text: 'Week Breakdown'
                            }
                        },
                        responsive: true,
                        scales: {
                            "y": {
                                display: "auto",
                                position: 'left',
                                type: 'linear',
                                title: {
                                    display: true,
                                    text: "Distance (km)",
                                },
                            },
                            "y2": {
                                display: "auto",
                                position: 'right',
                                type: 'linear',
                                title: {
                                    display: true,
                                    text: "Duration (min)",
                                },
                                grid: {
                                    drawOnChartArea: false,
                                },
                            }
                        }
                    }
                });
                getRemoteData(currentWeekChart, '/api/currentWeekChart?week-of={{ week_of|date("Y-m-d", "Pacific/Auckland") }}');
            });
            </script>
        </div>
    </div>

    <div class="training-log content">
        
        {% for day in week %}
        <details class="card ~neutral !low" {% if day.date|date("Y-m-d", "Pacific/Auckland") <= "now"|date("Y-m-d", "Pacific/Auckland") %}open{% endif %}>
            <summary><h3 class="heading">{{ day.date|date("D jS F", "Pacific/Auckland") }}</h3></summary>
        <div class="grid-container">
            <div class="Sidebar">
                <div class="Plan">
                    <div class="flex-apart card ~neutral !normal">
                        <div><span class="subheading">Plan</span><br>{{ day.plan.htmlPlan()|raw }}</div>
                        {% if day.plan %}
                            <span><a class="button ~warning !normal" href="/admin/fitlytics/plans/edit/{{ day.plan.id }}">Edit Plan</a></span>
                        {% else %}
                            <span><a class="button ~positive !high" href="/admin/fitlytics/plans/create?date={{day.date|date("Y-m-d", "Pacific/Auckland")}}">Add Plan</a></span>
                        {% endif %}
                    </div>
                    
                </div>
                <div class="Note card ~info !normal">
                    <div class="flex-apart">
                        <span class="subheading">Note</span>
                        {% if day.note %}
                            <span><a class="button ~warning !normal" href="/admin/fitlytics/notes/edit/{{ day.note.id }}">Edit Note</a></span>
                        {% else %}
                            <span><a class="button ~positive !high" href="/admin/fitlytics/notes/create?date={{day.date|date("Y-m-d", "Pacific/Auckland")}}">Add Note</a></span>
                        {%  endif %}
                    </div>
                    {% if day.note %}
                    <p>
                    {% if day.note.injured.isTrue() %}
                        <span class="chip ~critical">Injured</span>
                    {% else %}
                        <span class="chip ~positive">Not Injured</span>
                    {% endif %}

                    {% if day.note.sleep_quality == "5" %}
                        {% set sleepType = "~urge" %}
                    {% elseif day.note.sleep_quality == "4" %}
                        {% set sleepType = "~urge" %}
                    {% elseif day.note.sleep_quality == "3" %}
                        {% set sleepType = "~info" %}
                    {% elseif day.note.sleep_quality == "2" %}
                        {% set sleepType = "~warning" %}
                    {% elseif day.note.sleep_quality == "1" %}
                        {% set sleepType = "~critical" %}
                    {% else %}
                        {% set sleepType = "~neutral" %}
                    {% endif %}

                    {% if day.note.stress_level == "1" %}
                        {% set stressType = "~urge" %}
                    {% elseif day.note.stress_level == "2" %}
                        {% set stressType = "~urge" %}
                    {% elseif day.note.stress_level == "3" %}
                        {% set stressType = "~info" %}
                    {% elseif day.note.stress_level == "4" %}
                        {% set stressType = "~warning" %}
                    {% elseif day.note.stress_level == "5" %}
                        {% set stressType = "~critical" %}
                    {% else %}
                        {% set stressType= "~neutral" %}
                    {% endif %}
                    <span class="chip {{ sleepType }}">Sleep {{ day.note.sleep_quality }}/5</span>
                    <span class="chip {{ stressType }}">Stress {{ day.note.stress_level}}/5</span>
                    </p>
                    <p>{{ day.note.htmlNote()|raw }}</p>
                    {% endif%}
                </div>
            </div>
            <div class="Activities">
                <h4 class="subheading">Activities</h4>
                {% set renderActivities = false %}

                {% if day.date|date("Y-m-d", "Pacific/Auckland") < "now"|date("Y-m-d", "Pacific/Auckland") %}
                    {% if day.activities|length > 0 %}
                        {% set renderActivities = true %}
                    {% else %}
                        <p>No activities; took a rest day.</p>
                    {% endif %}

                {% elseif day.date|date("Y-m-d", "Pacific/Auckland") == "now"|date("Y-m-d", "Pacific/Auckland") %}
                    {% if day.activities|length > 0 %}
                        {% set renderActivities = true %}
                    {% else %}
                        <p>No activities yet!</p>
                    {% endif %}

                {% else %}
                    <p>Wait and see..</p>

                {% endif %}

                {% if renderActivities == true %}
                {# {% if day.activities|length > 0 %} #}
                <div class="table-wrapper">
                <table class="table">
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                    {% for activity in day.activities %}
                        <tr>
                            <td><small>{{ activity.start_date|date("g:ia", "Pacific/Auckland") }}</small><br>{{ activity.activityTypeEmoji() }} {{ activity.name }}</td>
                            <td>{{ activity.secondsToHours(activity.moving_time) }}<br>{{ activity.metersToKilometers(activity.distance, 2) }}km</td>
                            <td>{{ activity.total_elevation_gain }}m ⬆️</td>
                            <td><a class="button ~warning !normal" href="/admin/fitlytics/activities/edit/{{ activity.id }}">Edit</a></td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                </div>
                {% endif %}
                {# {% else %} #}
                {# <p>No activities - had a rest instead!</p> #}
                {# {% endif %} #}
            </div>
        </div>
        </details>
        {% endfor %}
    </div>

    <div id="calendar"></div>

    <canvas id="weeklySummaryChart"></canvas>

    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.2.1/dist/chart.min.js" integrity="sha256-uVEHWRIr846/vAdLJeybWxjPNStREzOlqLMXjW/Saeo=" crossorigin="anonymous"></script>
    <script>
    function getRemoteData(chart, url)
    {
        var request = new XMLHttpRequest();
        request.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                chart.data = JSON.parse(request.responseText);
                chart.update();
            }
        };
        request.open("GET", url, true);
        request.send();
    };

    document.addEventListener('DOMContentLoaded', function() {

        var chartEl = document.getElementById('weeklySummaryChart');
        var ctx = chartEl.getContext('2d');
        var config = { type: 'line',
            options: {
                responsive: true,
                onClick: (evt, item) => {
                    let week_of = evt.chart.data.datasets[0].data[item[0].index].x;
                    window.location.href = ("/?week-of=" + week_of);
                },
                interaction: {
                    mode: 'index',
                    intersect: false,
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Date'
                        }
                    },
                    "y1": {
                        display: "auto",
                        position: 'left',
                        type: 'linear',
                        title: {
                            display: true,
                            text: "Distance",
                        },
                    },
                    "y2": {
                        display: "auto",
                        position: 'right',
                        type: 'linear',
                        title: {
                            display: true,
                            text: "Elevation",
                        },
                        grid: {
                            drawOnChartArea: false,
                        },
                    }
                }
            }
        };
        var weeklySummaryChart = new Chart(ctx, config);
        getRemoteData(weeklySummaryChart, "/weekly-summary-chart-data");
        

        
    });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.6.0/main.min.js" integrity="sha256-ekrJn2FeZaiUFq99QswpQCUTME/HxaDfX7R8INzKJGE=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.6.0/main.css" integrity="sha256-ejA/z0dc7D+StbJL/0HAnRG/Xae3yS2gzg0OAnIURC4=" crossorigin="anonymous">
    <script src="https://unpkg.com/@popperjs/core@2/dist/umd/popper.min.js"></script>
    <script src="https://unpkg.com/tippy.js@6/dist/tippy-bundle.umd.js"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            eventDisplay: "block",
            height: "75vh",
            initialDate: "{{ week_of|date('Y-m-d') }}",
            stickyHeaderDates: true,
            firstDay: 1,
            stickyFooterScrollbar: true,
            showNonCurrentDates: true,
            fixedWeekCount: false,
            navLinks: true,
            weekNumbers: true,
            eventSources: [
                {
                  url: '/activities-calendar-feed/'
                },
                {
                  url: '/notes-calendar-feed/'
                },
                {
                  url: '/weekly-summary-feed/'
                },
                {
                  url: '/plans-calendar-feed/'
                },
            ],
            eventDidMount: function(info) {
                var tooltip = tippy(info.el, {
                    content: info.event.extendedProps.description,
                    allowHTML: true,
                });
            },
            eventContent: function(arg) {
                return {
                    html: arg.event.title.replace(/\n/g, '<br>')
                }
            },
            headerToolbar: {
                left: 'prev, next, today',
                center: 'title',
                right: 'dayGridWeek, dayGridMonth, listWeek'  
            },
        });
        calendar.render();
    });
    </script>
{% endblock %}